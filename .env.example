# SeaDexArr Configuration Example
# Copy this file to .env and fill in your actual values

# ==========================================
# CORE SERVICE CONFIGURATION
# ==========================================

# AniList API Configuration
# Get your access token from: https://anilist.co/settings/developer
SEADEXARR_ANILIST_ACCESS_TOKEN=your_anilist_access_token_here
SEADEXARR_ANILIST_CLIENT_ID=your_anilist_client_id  # Optional: for OAuth flow
SEADEXARR_ANILIST_CLIENT_SECRET=your_anilist_client_secret  # Optional: for OAuth flow

# SeaDx API Configuration
# Contact SeaDx admins for API access
SEADEXARR_SEADX_API_KEY=your_seadx_api_key_here
SEADEXARR_SEADX_BASE_URL=https://releases.seadx.org  # Default: https://releases.seadx.org

# ==========================================
# STARR APPS CONFIGURATION
# ==========================================

# Sonarr Configuration (for TV Series)
SEADEXARR_SONARR_URL=http://localhost:8989  # Your Sonarr instance URL
SEADEXARR_SONARR_API_KEY=your_sonarr_api_key_here  # Found in Sonarr Settings > General

# Radarr Configuration (for Movies)
SEADEXARR_RADARR_URL=http://localhost:7878  # Your Radarr instance URL
SEADEXARR_RADARR_API_KEY=your_radarr_api_key_here  # Found in Radarr Settings > General

# ==========================================
# TORRENT CLIENT CONFIGURATION (OPTIONAL)
# ==========================================

# qBittorrent Configuration
SEADEXARR_QBITTORRENT_HOST=localhost  # Default: localhost
SEADEXARR_QBITTORRENT_PORT=8080  # Default: 8080
SEADEXARR_QBITTORRENT_USERNAME=admin  # Optional: qBittorrent username
SEADEXARR_QBITTORRENT_PASSWORD=adminpass  # Optional: qBittorrent password

# ==========================================
# APPLICATION SETTINGS
# ==========================================

# Logging Configuration
SEADEXARR_LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR
SEADEXARR_LOG_FORMAT=console  # Options: json, console

# HTTP Client Configuration
SEADEXARR_HTTP_TIMEOUT=30  # Request timeout in seconds (default: 30)
SEADEXARR_HTTP_RETRIES=3  # Number of retry attempts (default: 3)

# Default Behavior
SEADEXARR_DRY_RUN=false  # Set to true to enable dry-run mode by default

# Optional: Custom config file path
# SEADEXARR_CONFIG_FILE=/path/to/custom/config.yml

# ==========================================
# EXAMPLE USAGE
# ==========================================

# 1. Basic sync commands:
#    seadexarr sync sonarr myusername
#    seadexarr sync radarr myusername --dry-run
#
# 2. Batch processing:
#    seadexarr sync-batch user1 user2 user3 --target=sonarr
#
# 3. Search releases:
#    seadexarr search-releases "Attack on Titan" --quality=1080p
#
# 4. Check configuration:
#    seadexarr config-validate
#    seadexarr status
#
# 5. Legacy compatibility:
#    seadexarr --sonarr myusername --dry-run

# ==========================================
# DOCKER COMPOSE EXAMPLE
# ==========================================

# If running in Docker, you can also use these in docker-compose.yml:
#
# services:
#   seadexarr:
#     image: seadexarr:latest
#     environment:
#       - SEADEXARR_ANILIST_ACCESS_TOKEN=your_token
#       - SEADEXARR_SEADX_API_KEY=your_key
#       - SEADEXARR_SONARR_URL=http://sonarr:8989
#       - SEADEXARR_SONARR_API_KEY=your_sonarr_key
#       - SEADEXARR_RADARR_URL=http://radarr:7878
#       - SEADEXARR_RADARR_API_KEY=your_radarr_key
#       - SEADEXARR_LOG_LEVEL=INFO
#       - SEADEXARR_LOG_FORMAT=json
#     volumes:
#       - ./config:/config
#     restart: unless-stopped

# ==========================================
# SECURITY NOTES
# ==========================================

# - Never commit your actual .env file to version control
# - Keep your API keys secure and rotate them regularly
# - Use different API keys for different environments (dev/staging/prod)
# - Consider using a secrets management system for production deployments